{"version":3,"sources":["webpack:///../src/rd/UI/index.mdx"],"names":["buttonStyle","margin","mixBlendMode","color","border","boxShadow","backgroundColor","padding","borderRadius","paragraphStyle","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","MenuBox","parentName","__position","__code","__scope","MenuBoxContent","Playground","Props","useState","activated","setActivated","activate","style","textAlign","onClose","onClick","isMDXComponent"],"mappings":"m7BASO,MAAMA,EAAc,CACzBC,OAAQ,OACRC,aAAc,aACdC,MAAO,QACPC,OAAQ,EACRC,UAAW,OACXC,gBAAiB,UACjBC,QAAS,GACTC,aAAc,S,oMAET,MAAMC,EAAiB,CAC5BP,aAAc,aACdC,MAAO,c,uMAEF,MAAMO,EAAe,Q,qMAE5B,MAKMC,EAAc,CAClBX,cACAU,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,oBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,oJAEA,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,eADR,eAGA,+IAEA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAASF,QAAQ,UAC5B,iBAAQ,CACN,GAAM,WADR,WAGA,sEAAqD,0BAAYG,WAAW,KAAvB,WAArD,sFAC0D,0BAAYA,WAAW,KAAvB,kBAD1D,uEAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kiBAAsiBC,QAAS,CAChlBP,QACAH,kBACAM,YACAK,mBACAC,eACAC,UACAC,oBACAd,kBACAb,cACAS,iBACAC,gBACCO,QAAQ,cACZ,KAEK,MAAM,EAACW,EAAD,EAAYC,GAAgBF,oBAAS,GAC3C,OAAO,YAAC,IAAD,CAASG,SAAUF,EAAWG,MAAO,CAC1CC,UAAW,UACVC,QAAS,IAAMJ,GAAa,GAAQZ,QAAQ,WACnD,sBAAQiB,QAAS,KACTL,GAAcD,IACbG,MAAO/B,GAFhB,0BAKA,YAAC,IAAD,CAAgBiB,QAAQ,kBACtB,iBAAGc,MAAOtB,GAAV,sCAKF,kDAAiC,kBAAIW,WAAW,KAAf,SAAjC,yE,mMAMJN,EAAWqB,gBAAiB","file":"component---src-rd-ui-index-mdx-2f0eaca864761d9fbf56.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/3d-plantviewer/3d-plantviewer/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport MenuBox, { MenuBoxContent } from './MenuBox';\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nexport const buttonStyle = {\n  margin: 'auto',\n  mixBlendMode: 'difference',\n  color: 'white',\n  border: 0,\n  boxShadow: 'none',\n  backgroundColor: '#404040',\n  padding: 10,\n  borderRadius: 10\n};\nexport const paragraphStyle = {\n  mixBlendMode: 'difference',\n  color: 'white'\n};\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  buttonStyle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"ui-components\"\n    }}>{`UI Components`}</h1>\n    <p>{`The goal of this page is to present and reference different reusable UI\ncomponents in the project, and detail their usage.`}</p>\n    <h2 {...{\n      \"id\": \"menubox\"\n    }}>{`MenuBox`}</h2>\n    <h3 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h3>\n    <p>{`This component is a basic UI component for displaying a floating box, and\ndisplaying it only when a condition is met.`}</p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={MenuBox} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"exemple\"\n    }}>{`Exemple`}</h3>\n    <p>{`The following exemple shows how you can use a `}<inlineCode parentName=\"p\">{`MenuBox`}</inlineCode>{` to display something\nwhen clicking on a button. Every element that is a child of `}<inlineCode parentName=\"p\">{`MenuBoxContent`}</inlineCode>{`\nis displaying in the pop up box, the rest is displayed as normal.`}</p>\n    <Playground __position={1} __code={'() => {\\n  // MenuBoxExemple\\n  const [activated, setActivated] = useState(false)\\n  return (\\n    <MenuBox\\n      activate={activated}\\n      style={{ textAlign: \\'center\\' }}\\n      onClose={() => setActivated(false)}\\n    >\\n      <button\\n        onClick={() => {\\n          setActivated(!activated)\\n        }}\\n        style={buttonStyle}\\n      >\\n        Click me to open a box\\n      </button>\\n      <MenuBoxContent>\\n        <p style={paragraphStyle}> I\\'m the content of the box ! </p>\\n      </MenuBoxContent>\\n    </MenuBox>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      MenuBox,\n      MenuBoxContent,\n      Playground,\n      Props,\n      useState,\n      DefaultLayout,\n      buttonStyle,\n      paragraphStyle,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // MenuBoxExemple\n        const [activated, setActivated] = useState(false);\n        return <MenuBox activate={activated} style={{\n          textAlign: 'center'\n        }} onClose={() => setActivated(false)} mdxType=\"MenuBox\">\n    <button onClick={() => {\n            setActivated(!activated);\n          }} style={buttonStyle}>\n      Click me to open a box\n    </button>\n    <MenuBoxContent mdxType=\"MenuBoxContent\">\n      <p style={paragraphStyle}> I'm the content of the box ! </p>\n    </MenuBoxContent>\n  </MenuBox>;\n      }}\n    </Playground>\n    <p>{`This exemple uses a React `}<em parentName=\"p\">{`state`}</em>{` to keep track of the state of the MenuBox\n(opened or closed).`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}