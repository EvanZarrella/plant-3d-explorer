(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"Wd+X":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return a})),n.d(t,"default",(function(){return p}));n("yvkl"),n("abGl"),n("mXGw");var r=n("/FXl"),o=n("TjRS");n("aD51");function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const a={};void 0!==a&&a&&a===Object(a)&&Object.isExtensible(a)&&!a.hasOwnProperty("__filemeta")&&Object.defineProperty(a,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"doc/tests.mdx"}});const c={_frontmatter:a},b=o.a;function p(e){let{components:t}=e,n=i(e,["components"]);return Object(r.b)(b,s({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"writing-tests"},"Writing tests"),Object(r.b)("h2",{id:"technologies-used"},"Technologies used"),Object(r.b)("p",null,"Since this app is React based, the most appropriate testing framework (at least\nwhen the tests were first written) is ",Object(r.b)("a",s({parentName:"p"},{href:"https://jestjs.io/"}),"Jest"),", associated\nwith the\n",Object(r.b)("a",s({parentName:"p"},{href:"https://testing-library.com/docs/react-testing-library/intro"}),"React Testing Library"),"."),Object(r.b)("p",null,"Of course, make sure you understand those frameworks before trying to write\ntests, they're pretty annoying sometimes, but there isn't many alternatives."),Object(r.b)("h2",{id:"test-structure"},"Test structure"),Object(r.b)("p",null,"Each test file must be placed alongside the code file it's supposed to test,\nand have the same name with a ",Object(r.b)("inlineCode",{parentName:"p"},".test")," before the ",Object(r.b)("inlineCode",{parentName:"p"},".js"),"."),Object(r.b)("p",null,"For exemple, if I want to create a test file to test ",Object(r.b)("inlineCode",{parentName:"p"},"exampleComponent.js")," in\nthe ",Object(r.b)("inlineCode",{parentName:"p"},"components/")," directory, i'll create the test file\n",Object(r.b)("inlineCode",{parentName:"p"},"exampleComponent.test.js")," in the same directory."),Object(r.b)("h2",{id:"running-tests"},"Running tests"),Object(r.b)("p",null,"To run tests, simply run the following command:"),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"npm run test\n")),Object(r.b)("p",null,"Feel free to read ",Object(r.b)("a",s({parentName:"p"},{href:"https://create-react-app.dev/docs/running-tests/"}),"this")," for\nmore information."),Object(r.b)("h2",{id:"writing-tests-1"},"Writing tests"),Object(r.b)("h3",{id:"imports"},"Imports"),Object(r.b)("p",null,"To test things, don't use the imports from ",Object(r.b)("inlineCode",{parentName:"p"},"react-testing-library"),", but import\nthose functions from ",Object(r.b)("inlineCode",{parentName:"p"},"rd/tools/test-utils.js"),". The reason is that this import\nhas a wrapper instead, which ensures the components are renders correctly."),Object(r.b)("h3",{id:"good-practices"},"Good practices"),Object(r.b)("p",null,"When writing tests, try to reuse code as much as possible by using the\nbeforeEach, beforeAll, and other functions provided by Jest."),Object(r.b)("p",null,"Use describe blocks to organize tests in logical parts (of course, you don't\nneed to use describe blocks if it's very small tests, or if it doesn't make a\nlot of sense to use them)."),Object(r.b)("h2",{id:"continous-integration"},"Continous integration"),Object(r.b)("p",null,"At the time of writing this documentation, continous integration is\nsetup to trigger on push and pull request on the master branch.\nTry to write tests for every component you write to make the app more\nrobust."))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"doc/tests.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---doc-tests-mdx-d858a35a304865d4b252.js.map