{"version":3,"sources":["webpack:///../doc/tests.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"g0BAMO,MAAMA,EAAe,Q,+LAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,oBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,iBAAQ,CACN,GAAM,qBADR,qBAGA,+IACoC,mBAAGC,WAAW,KAAQ,CACtD,KAAQ,uBADwB,QADpC,2BAKF,mBAAGA,WAAW,KAAQ,CAChB,KAAQ,iEADd,yBALE,KAQA,kLAEA,iBAAQ,CACN,GAAM,kBADR,kBAGA,oIAC4B,0BAAYA,WAAW,KAAvB,SAD5B,eAC6F,0BAAYA,WAAW,KAAvB,OAD7F,KAEA,6EAA4D,0BAAYA,WAAW,KAAvB,uBAA5D,YACE,0BAAYA,WAAW,KAAvB,eADF,0CAEF,0BAAYA,WAAW,KAAvB,4BAFE,2BAGA,iBAAQ,CACN,GAAM,iBADR,iBAGA,wEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mBAEL,0CAAyB,mBAAGA,WAAW,KAAQ,CAC3C,KAAQ,qDADa,QAAzB,2BAIA,iBAAQ,CACN,GAAM,yBADR,yBAGA,mP,6LAQJJ,EAAWK,gBAAiB","file":"component---doc-tests-mdx-55e22b5506b52319572b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/3d-plantviewer/3d-plantviewer/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"writing-tests\"\n    }}>{`Writing tests`}</h1>\n    <h2 {...{\n      \"id\": \"technologies-used\"\n    }}>{`Technologies used`}</h2>\n    <p>{`Since this app is React based, the most appropriate testing framework (at least\nwhen the tests were first written) is `}<a parentName=\"p\" {...{\n        \"href\": \"https://jestjs.io/\"\n      }}>{`Jest`}</a>{`, associated\nwith the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://testing-library.com/docs/react-testing-library/intro\"\n      }}>{`React Testing Library`}</a>{`.`}</p>\n    <p>{`Of course, make sure you understand those frameworks before trying to write\ntests, they're pretty annoying sometimes, but there isn't many alternatives.`}</p>\n    <h2 {...{\n      \"id\": \"test-structure\"\n    }}>{`Test structure`}</h2>\n    <p>{`Each test file must be placed alongside the code file it's supposed to test,\nand have the same name with a `}<inlineCode parentName=\"p\">{`.test`}</inlineCode>{` before the `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{`.`}</p>\n    <p>{`For exemple, if I want to create a test file to test `}<inlineCode parentName=\"p\">{`exampleComponent.js`}</inlineCode>{` in\nthe `}<inlineCode parentName=\"p\">{`components/`}</inlineCode>{` directory, i'll create the test file\n`}<inlineCode parentName=\"p\">{`exampleComponent.test.js`}</inlineCode>{` in the same directory.`}</p>\n    <h2 {...{\n      \"id\": \"running-tests\"\n    }}>{`Running tests`}</h2>\n    <p>{`To run tests, simply run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm run test\n`}</code></pre>\n    <p>{`Feel free to read `}<a parentName=\"p\" {...{\n        \"href\": \"https://create-react-app.dev/docs/running-tests/\"\n      }}>{`this`}</a>{` for\nmore information.`}</p>\n    <h2 {...{\n      \"id\": \"continous-integration\"\n    }}>{`Continous integration`}</h2>\n    <p>{`At the time of writing this documentation, continous integration is\nsetup to trigger on push and pull request on the master branch.\nTry to write tests for every component you write to make the app more\nrobust.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}