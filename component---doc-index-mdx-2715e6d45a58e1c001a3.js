(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{UXkz:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return b}));n("yvkl"),n("abGl"),n("mXGw");var o=n("/FXl"),r=n("TjRS");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"doc/index.mdx"}});const c={_frontmatter:l},s=r.a;function b(e){let{components:t}=e,n=a(e,["components"]);return Object(o.b)(s,i({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"welcome"},"Welcome"),Object(o.b)("h2",{id:"about-the-visualizer"},"About the Visualizer"),Object(o.b)("p",null,"This is the developper documentation of the Plant Visualizer for the ROMI\nProject."),Object(o.b)("p",null,"This app is designed to give a visual feedback of the ROMI pipeline. It allows\nusers to observe 3D reconstructions of plants, and to review different\nautomatic treatments applied to these plants."),Object(o.b)("h2",{id:"getting-started"},"Getting started"),Object(o.b)("p",null,"To get started with the visualizer, clone (or fork and then clone) the\nGitHub ",Object(o.b)("a",i({parentName:"p"},{href:"https://github.com/romi/3d-plantviewer"}),"repository"),"."),Object(o.b)("p",null,"Follow the README instructions to fetch dependencies and start a local\ndevelopment server."),Object(o.b)("h2",{id:"technologies-used"},"Technologies used"),Object(o.b)("p",null,"The visualizer uses 3 main technologies :"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",i({parentName:"li"},{href:"https://reactjs.org/"}),"React")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",i({parentName:"li"},{href:"https://redux.js.org/"}),"Redux")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",i({parentName:"li"},{href:"https://threejs.org/"}),"ThreeJS"))),Object(o.b)("p",null,"It's strongly recommended that you learn how these 3 technologies work in order\nto improve the visualizer"),Object(o.b)("h2",{id:"this-documentation"},"This documentation"),Object(o.b)("p",null,"This doc is aimed at documenting each ",Object(o.b)("em",{parentName:"p"},"component")," (again, if you don't know\nwhat a component is, read about React) of this application to help you\nunderstand the underlying architecture and inner workings of the application."))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"doc/index.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---doc-index-mdx-2715e6d45a58e1c001a3.js.map