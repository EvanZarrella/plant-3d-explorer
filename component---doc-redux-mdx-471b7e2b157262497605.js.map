{"version":3,"sources":["webpack:///../doc/redux.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","object","initialState","scansState","sortingMethods","settingsState","isMDXComponent"],"mappings":"82BAUO,MAAMA,EAAe,Q,+LAE5B,MAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,EACF,oBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,eADR,eAGA,iBAAQ,CACN,GAAM,eADR,eAGA,6CAA4B,mBAAGC,WAAW,KAAQ,CAC9C,KAAQ,wBADgB,6BAA5B,kMAMA,iBAAQ,CACN,GAAM,mBADR,mBAGA,2FACA,iBAAQ,CACN,GAAM,gBADR,gBAGA,uHAEA,0EACA,YAAC,IAAD,CAAiBC,OAAQC,IAAcH,QAAQ,oBAC/C,iBAAQ,CACN,GAAM,SADR,SAGA,2IAEA,4DACA,YAAC,IAAD,CAAiBE,OAAQE,IAAYJ,QAAQ,oBAC7C,iGACA,YAAC,IAAD,CAAiBE,OAAQG,IAAgBL,QAAQ,oBACjD,iBAAQ,CACN,GAAM,YADR,YAGA,2KAEA,4DACA,YAAC,IAAD,CAAiBE,OAAQI,IAAeN,QAAQ,0B,6LAKpDH,EAAWU,gBAAiB","file":"component---doc-redux-mdx-471b7e2b157262497605.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/3d-plantviewer/3d-plantviewer/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { initialState } from 'flow/interactions/reducer';\nimport { sortingMethods, initialState as scansState } from 'flow/scans/reducer';\nimport { initialState as settingsState } from 'flow/settings/reducer';\nimport ObjectFormatter from './components/objectFormatter';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"redux-store\"\n    }}>{`Redux store`}</h1>\n    <h2 {...{\n      \"id\": \"about-redux\"\n    }}>{`About Redux`}</h2>\n    <p>{`As mentionned in the `}<a parentName=\"p\" {...{\n        \"href\": \"/#technologies-used\"\n      }}>{`technologies used section`}</a>{`, this\napplication uses Redux for its state management, it is recommended that you\ncheck out Redux if you don't know how it works to better understand this section\nand the app as a whole.`}</p>\n    <h2 {...{\n      \"id\": \"store-structure\"\n    }}>{`Store structure`}</h2>\n    <p>{`The Redux store of the visualizer is divided into 3 main sections:`}</p>\n    <h3 {...{\n      \"id\": \"interactions\"\n    }}>{`Interactions`}</h3>\n    <p>{`This part of the store contains information about the state of\nuser controls and the 3D view.`}</p>\n    <p>{`The initial state of this store is the following:`}</p>\n    <ObjectFormatter object={initialState} mdxType=\"ObjectFormatter\" />\n    <h3 {...{\n      \"id\": \"scans\"\n    }}>{`Scans`}</h3>\n    <p>{`This part of the store contains sorting, search, and filtering information for\nthe home page (the list of scans).`}</p>\n    <p>{`The initial state is the following:`}</p>\n    <ObjectFormatter object={scansState} mdxType=\"ObjectFormatter\" />\n    <p>{`What might be more interesting is the list of available sorting methods:`}</p>\n    <ObjectFormatter object={sortingMethods} mdxType=\"ObjectFormatter\" />\n    <h3 {...{\n      \"id\": \"settings\"\n    }}>{`Settings`}</h3>\n    <p>{`This last part of the store contains settings informations, for example, which\nlayers are currently displayed, or which tool is currently active.`}</p>\n    <p>{`The initial state is the following:`}</p>\n    <ObjectFormatter object={settingsState} mdxType=\"ObjectFormatter\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}